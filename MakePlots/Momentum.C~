// Marco to draw momentum distributions
// Sam Grant - Jan 2019

#include <iostream>
#include "TFile.h"
#include "TH1D.h"
#include "TCanvas.h"
#include "TStyle.h"
#include "TLegend.h"

using namespace std;

void draw(TH1D *h1, TH1D *h2, string title, string fname) {

  gStyle->SetLegendTextSize(0.03);

  TCanvas *c = new TCanvas("c","c",3000,2000);
  TLegend *leg = new TLegend(0.65,0.85,0.95,0.95);

  //  leg->SetBorderSize(0);
  leg->AddEntry(h1,"Non lost muons (track-cluster)");
  leg->AddEntry(h2,"Lost muons (track-cluster)");
  h1->SetStats(0);
  h2->SetStats(0);
  h1->SetLineColor(kRed);
  h2->SetLineColor(kGreen-3);
  h1->SetLineWidth(10);
  h2->SetLineWidth(10);
  h1->SetTitle(title.c_str());
  h1->Draw();
  h2->Draw("same");
  leg->Draw("same");
  c->SaveAs(fname.c_str());

  delete c;
  return;
  
}

int main() {

  string fname[2] = {"Plots/MomentumNoHighEnergyCut.png","Plots/MomentumHighEnergyCut.png"};
  string inputName[2] = {"TrackCluster","TrackClusterHighEnergyCut"};

  for(int icut(0); icut<2; icut++) {

    TFile *input = TFile::Open(("../ReadOldNTuples/"+inputName[icut]+"/RootFiles/"+inputName[icut]+".root").c_str());
    TH1D *n = (TH1D*)input->Get("p_1"); 
    TH1D *mu = (TH1D*)input->Get("p_2");
    draw(n,mu,";Track Momentum, p [GeV];Entries",fname[icut]);

  }  

  return 0;
} 
